#include "RoboFDM.h"

namespace py = pybind11;

PYBIND11_MODULE(RoboFDM, m) {
  py::class_<RoboFDM>(m, "init")
      .def(py::init())
      .def("load_tet_mesh", &RoboFDM::load_tet_mesh)
      .def("load_tri_mesh", &RoboFDM::load_tri_mesh)
      .def("get_poly", &RoboFDM::get_poly)
      .def("set_poly", &RoboFDM::set_poly)
      .def("plane_cut", &RoboFDM::plane_cut)
      .def("reset", &RoboFDM::reset)
      .def("step", &RoboFDM::step)
      .def("render", &RoboFDM::render)
      .def("n_features", &RoboFDM::n_features)
      .def("planes", &RoboFDM::planes)
      .def("get_inrev_risky_area", &RoboFDM::get_inrev_risky_area)
      .def("get_risky_area", &RoboFDM::get_risky_area)
      .def("get_area", &RoboFDM::get_area)
      .def("get_volume", &RoboFDM::get_volume)
      .def("get_far_risky_area", &RoboFDM::get_far_risky_area)
      .def("plane_cut_both", &RoboFDM::plane_cut_both)
      .def("get_positive_poly", &RoboFDM::get_positive_poly)
      .def("sample", &RoboFDM::sample_mesh);
}

bool RoboFDM::mesh_to_polyhedron(const Eigen::MatrixXd& V, const Eigen::MatrixXi& F, Polyhedron& poly) {
	typedef Polyhedron::HalfedgeDS HalfedgeDS;
	std::unordered_map<Vertex_handle, int> map_vertex_index_;
	std::unordered_map<Facet_handle, int> map_facet_index_;
	// Postcondition: hds is a valid polyhedral surface.
	CGAL::Polyhedron_incremental_builder_3<HalfedgeDS> B(poly.hds());
	B.begin_surface(V.rows(), F.rows());
	typedef HalfedgeDS::Vertex Vertex;
	typedef Vertex::Point Point;
	assert(V.cols() == 3 && "V must be #V by 3");
	for (int v = 0; v < V.rows(); v++) {
		const Vertex_handle he = B.add_vertex(Point(V(v, 0), V(v, 1), V(v, 2)));
		map_vertex_index_[he] = v;
	}
	assert(F.cols() == 3 && "F must be #F by 3");
	for (int f = 0; f < F.rows(); f++) {
		Facet_handle fh = B.begin_facet();
		for (int c = 0; c < 3; c++) {
			B.add_vertex_to_facet(F(f, c));
		}
		B.end_facet();
		map_facet_index_[fh] = f;
		fh->facetCentroid = Geotools::get_facet_centroid(fh);
	}
	if (B.error()) {
		B.rollback();
		return false;
	}
	B.end_surface();
	return poly.is_valid();
}

void RoboFDM::load_tet_mesh(const std::string& file) {
	V_ = Eigen::MatrixXd();
	F_ = Eigen::MatrixXi();
	newLoaded_ = true;
}

void RoboFDM::load_tri_mesh(const std::string& file) {
	V_ = Eigen::MatrixXd();
	F_ = Eigen::MatrixXi();
	newLoaded_ = true;
}

BSPNode RoboFDM::apply_old_action(double x, double y, double z, double alpha, double beta) {
	// TODO: Apply this action to FineDecomposition
	auto plt = MeshCutEval::get_platform_cross(10.0, 0);
	auto pl = MeshCutEval::convert_xyzab_to_plane(x, y, z, alpha, beta, bbox_);
	auto res = MeshCutEval::apply_plane_cut(poly, pl, bbox_, plt);
	return res;
}


int RoboFDM::n_features()
{
	return Na * Nb * Nc;
}

static Vector3 jet_color(double v, double vmin = 0, double vmax = 1)
{
	if (v < vmin) v = vmin;
	if (v > vmax) v = vmax;
	const double dv = vmax - vmin;

	double r = 1, g = 1, b = 1;
	if (v < (vmin + 0.25 * dv)) {
		r = 0;
		g = 4 * (v - vmin) / dv;
	}
	else if (v < (vmin + 0.5 * dv)) {
		r = 0;
		b = 1 + 4 * (vmin + 0.25 * dv - v) / dv;
	}
	else if (v < (vmin + 0.75 * dv)) {
		r = 4 * (v - vmin - 0.5 * dv) / dv;
		b = 0;
	}
	else {
		g = 1 + 4 * (vmin + 0.75 * dv - v) / dv;
		b = 0;
	}
	return Vector3(std::max(0.0, std::min(r, 1.0)), std::max(0.0, std::min(g, 1.0)), std::max(0.0, std::min(b, 1.0)));
}

void RoboFDM::load_candidate_dirs(std::vector<Vector3>& candidate_dirs_)
{
	if (!candidate_dirs_.empty()) candidate_dirs_.clear();
	candidate_dirs_.reserve(1000);
	candidate_dirs_.emplace_back(-0.601407, 0.73684, -0.308831);
	candidate_dirs_.emplace_back(-0.330792, 0.942325, 0.0509857);
	candidate_dirs_.emplace_back(-0.623257, 0.634368, -0.457305);
	candidate_dirs_.emplace_back(-0.267165, 0.952096, -0.148783);
	candidate_dirs_.emplace_back(-0.749754, 0.646213, -0.142401);
	candidate_dirs_.emplace_back(0.606737, 0.530172, -0.592274);
	candidate_dirs_.emplace_back(-0.893392, 0.425746, -0.143496);
	candidate_dirs_.emplace_back(0.556252, 0.319731, 0.767043);
	candidate_dirs_.emplace_back(0.796523, 0.57741, 0.179301);
	candidate_dirs_.emplace_back(0.0520123, 0.998507, 0.0167003);
	candidate_dirs_.emplace_back(-0.0724158, 0.992513, 0.0983604);
	candidate_dirs_.emplace_back(0.684386, 0.461577, 0.564413);
	candidate_dirs_.emplace_back(0.0347147, 0.923414, 0.382232);
	candidate_dirs_.emplace_back(-0.328233, 0.749393, -0.575042);
	candidate_dirs_.emplace_back(0.717561, 0.27457, -0.640092);
	candidate_dirs_.emplace_back(0.397132, 0.81976, -0.412649);
	candidate_dirs_.emplace_back(-0.462165, 0.427756, 0.776806);
	candidate_dirs_.emplace_back(0.0296482, 0.981215, -0.190627);
	candidate_dirs_.emplace_back(-0.0424659, 0.974345, 0.221018);
	candidate_dirs_.emplace_back(-0.652828, 0.358847, -0.667116);
	candidate_dirs_.emplace_back(-0.7543, 0.581802, -0.3042);
	candidate_dirs_.emplace_back(0.223888, 0.272117, -0.935856);
	candidate_dirs_.emplace_back(-0.860329, 0.297087, -0.414215);
	candidate_dirs_.emplace_back(0.0655112, 0.958701, -0.276769);
	candidate_dirs_.emplace_back(-0.303074, 0.60991, -0.732227);
	candidate_dirs_.emplace_back(-0.192043, 0.971483, -0.139068);
	candidate_dirs_.emplace_back(-0.0348691, 0.999254, 0.0166205);
	candidate_dirs_.emplace_back(-0.552552, 0.824291, -0.123413);
	candidate_dirs_.emplace_back(-0.172757, 0.970343, 0.169084);
	candidate_dirs_.emplace_back(0.249724, 0.967372, 0.0427686);
	candidate_dirs_.emplace_back(0.11424, 0.373588, -0.920533);
	candidate_dirs_.emplace_back(0.396731, 0.345657, 0.850368);
	candidate_dirs_.emplace_back(0.435548, 0.709767, -0.553651);
	candidate_dirs_.emplace_back(-0.142696, 0.988528, 0.0494955);
	candidate_dirs_.emplace_back(-0.713236, 0.455303, 0.53291);
	candidate_dirs_.emplace_back(0.712401, 0.653564, 0.255614);
	candidate_dirs_.emplace_back(0.299963, 0.920953, -0.248731);
	candidate_dirs_.emplace_back(0.0881524, 0.22666, -0.969976);
	candidate_dirs_.emplace_back(-0.414975, 0.82765, 0.377878);
	candidate_dirs_.emplace_back(-0.0449979, 0.892272, -0.449251);
	candidate_dirs_.emplace_back(0.720639, 0.547981, 0.424732);
	candidate_dirs_.emplace_back(0.165866, 0.583252, 0.795176);
	candidate_dirs_.emplace_back(0.71895, 0.650927, -0.243729);
	candidate_dirs_.emplace_back(-0.576515, 0.514589, -0.634688);
	candidate_dirs_.emplace_back(-0.00896909, 0.994271, -0.106508);
	candidate_dirs_.emplace_back(-0.0085907, 0.521679, 0.853099);
	candidate_dirs_.emplace_back(-0.117617, 0.375985, -0.919131);
	candidate_dirs_.emplace_back(0.935664, 0.298959, -0.187498);
	candidate_dirs_.emplace_back(0.259069, 0.545655, -0.796959);
	candidate_dirs_.emplace_back(0.958573, 0.265183, 0.103995);
	candidate_dirs_.emplace_back(-0.198911, 0.311114, 0.929324);
	candidate_dirs_.emplace_back(-0.206815, 0.93178, 0.298353);
	candidate_dirs_.emplace_back(-0.538544, 0.780095, 0.318468);
	candidate_dirs_.emplace_back(0.535941, 0.765353, 0.356373);
	candidate_dirs_.emplace_back(-0.220158, 0.759271, 0.612404);
	candidate_dirs_.emplace_back(-0.0848773, 0.65929, -0.747083);
	candidate_dirs_.emplace_back(0.668633, 0.623664, 0.404937);
	candidate_dirs_.emplace_back(0.0221337, 0.879096, -0.47613);
	candidate_dirs_.emplace_back(-0.44559, 0.692124, -0.567816);
	candidate_dirs_.emplace_back(-0.232759, 0.789378, -0.568071);
	candidate_dirs_.emplace_back(0.18182, 0.960734, -0.209601);
	candidate_dirs_.emplace_back(0.283263, 0.847561, -0.448779);
	candidate_dirs_.emplace_back(-0.907542, 0.382985, 0.172308);
	candidate_dirs_.emplace_back(-0.817049, 0.568432, -0.0965171);
	candidate_dirs_.emplace_back(-0.172395, 0.961834, -0.212495);
	candidate_dirs_.emplace_back(0.334807, 0.862835, 0.378709);
	candidate_dirs_.emplace_back(0.14164, 0.90019, -0.41182);
	candidate_dirs_.emplace_back(0.51491, 0.838024, 0.18051);
	candidate_dirs_.emplace_back(0.586049, 0.62772, 0.512361);
	candidate_dirs_.emplace_back(0.413462, 0.765707, 0.492688);
	candidate_dirs_.emplace_back(0.515351, 0.682551, -0.518205);
	candidate_dirs_.emplace_back(0.758845, 0.212414, 0.615658);
	candidate_dirs_.emplace_back(-0.872511, 0.352277, 0.338564);
	candidate_dirs_.emplace_back(-0.539887, 0.840225, 0.0504391);
	candidate_dirs_.emplace_back(-0.003198, 0.249665, -0.968327);
	candidate_dirs_.emplace_back(0.361763, 0.507897, -0.781773);
	candidate_dirs_.emplace_back(-0.96507, 0.260528, 0.0276613);
	candidate_dirs_.emplace_back(0.410754, 0.61042, -0.677251);
	candidate_dirs_.emplace_back(-0.484828, 0.528855, -0.696602);
	candidate_dirs_.emplace_back(0.614812, 0.250406, 0.747866);
	candidate_dirs_.emplace_back(-0.337155, 0.911177, 0.236818);
	candidate_dirs_.emplace_back(0.337333, 0.205707, 0.918636);
	candidate_dirs_.emplace_back(-0.689896, 0.675385, -0.260573);
	candidate_dirs_.emplace_back(0.664061, 0.744562, -0.0681956);
	candidate_dirs_.emplace_back(0.389722, 0.690887, 0.608927);
	candidate_dirs_.emplace_back(0.754006, 0.495632, -0.431072);
	candidate_dirs_.emplace_back(0.545225, 0.800288, 0.249538);
	candidate_dirs_.emplace_back(0.147811, 0.985065, -0.0883156);
	candidate_dirs_.emplace_back(0.96811, 0.249408, -0.0236186);
	candidate_dirs_.emplace_back(-0.983306, 0.181232, 0.0162372);
	candidate_dirs_.emplace_back(-0.345813, 0.802301, -0.486546);
	candidate_dirs_.emplace_back(0.326654, 0.94451, -0.0346117);
	candidate_dirs_.emplace_back(0.460252, 0.875276, -0.148525);
	candidate_dirs_.emplace_back(-0.831464, 0.554497, 0.0346357);
	candidate_dirs_.emplace_back(-0.419918, 0.906931, -0.0338379);
	candidate_dirs_.emplace_back(-0.497309, 0.437743, -0.749042);
	candidate_dirs_.emplace_back(0.574815, 0.197927, -0.793986);
	candidate_dirs_.emplace_back(0.0269338, 0.678475, -0.734129);
	candidate_dirs_.emplace_back(-0.784386, 0.216534, 0.58125);
	candidate_dirs_.emplace_back(-0.212602, 0.82803, 0.518812);
	candidate_dirs_.emplace_back(-0.0689521, 0.95048, -0.303039);
	candidate_dirs_.emplace_back(-0.42522, 0.434968, -0.793719);
	candidate_dirs_.emplace_back(0.349684, 0.921699, -0.167903);
	candidate_dirs_.emplace_back(-0.172692, 0.930419, -0.323261);
	candidate_dirs_.emplace_back(-0.443489, 0.880193, -0.16905);
	candidate_dirs_.emplace_back(0.161942, 0.745225, -0.64685);
	candidate_dirs_.emplace_back(-0.400382, 0.540458, -0.739999);
	candidate_dirs_.emplace_back(0.0365968, 0.814377, -0.579181);
	candidate_dirs_.emplace_back(0.446032, 0.773771, -0.449815);
	candidate_dirs_.emplace_back(0.9319, 0.257008, 0.255946);
	candidate_dirs_.emplace_back(0.174331, 0.786976, 0.591842);
	candidate_dirs_.emplace_back(0.141325, 0.966792, 0.212933);
	candidate_dirs_.emplace_back(-0.661311, 0.335647, 0.670827);
	candidate_dirs_.emplace_back(-0.723116, 0.540974, 0.429477);
	candidate_dirs_.emplace_back(-0.475031, 0.87449, -0.0980413);
	candidate_dirs_.emplace_back(0.309257, 0.726268, 0.613918);
	candidate_dirs_.emplace_back(0.591574, 0.44774, -0.670499);
	candidate_dirs_.emplace_back(-0.15769, 0.556336, -0.815858);
	candidate_dirs_.emplace_back(0.42152, 0.864564, -0.273588);
	candidate_dirs_.emplace_back(0.189822, 0.350224, -0.91723);
	candidate_dirs_.emplace_back(0.591879, 0.362747, 0.719787);
	candidate_dirs_.emplace_back(-0.275652, 0.844938, 0.458362);
	candidate_dirs_.emplace_back(-0.303213, 0.788402, 0.535242);
	candidate_dirs_.emplace_back(-0.0726025, 0.995577, -0.0596302);
	candidate_dirs_.emplace_back(0.75624, 0.632319, -0.168147);
	candidate_dirs_.emplace_back(0.633894, 0.700065, -0.328766);
	candidate_dirs_.emplace_back(0.640392, 0.560535, 0.52507);
	candidate_dirs_.emplace_back(0.791324, 0.605736, 0.0830096);
	candidate_dirs_.emplace_back(0.741311, 0.554776, -0.377732);
	candidate_dirs_.emplace_back(0.298938, 0.608019, 0.735492);
	candidate_dirs_.emplace_back(-0.578462, 0.451776, 0.679176);
	candidate_dirs_.emplace_back(0.405389, 0.66865, -0.623351);
	candidate_dirs_.emplace_back(-0.855141, 0.47827, -0.199979);
	candidate_dirs_.emplace_back(0.857674, 0.347887, -0.378642);
	candidate_dirs_.emplace_back(0.0365813, 0.984007, 0.174331);
	candidate_dirs_.emplace_back(0.174376, 0.509924, -0.84236);
	candidate_dirs_.emplace_back(0.195071, 0.855155, 0.480267);
	candidate_dirs_.emplace_back(-0.202991, 0.274274, -0.939983);
	candidate_dirs_.emplace_back(-0.37354, 0.217544, -0.901744);
	candidate_dirs_.emplace_back(-0.326699, 0.869054, -0.371502);
	candidate_dirs_.emplace_back(0.0691196, 0.950443, 0.303118);
	candidate_dirs_.emplace_back(-0.482689, 0.658434, 0.577474);
	candidate_dirs_.emplace_back(0.0734009, 0.992029, 0.102423);
	candidate_dirs_.emplace_back(0.200979, 0.97256, 0.117192);
	candidate_dirs_.emplace_back(-0.717243, 0.474667, -0.51015);
	candidate_dirs_.emplace_back(0.260276, 0.930504, 0.257718);
	candidate_dirs_.emplace_back(0.192025, 0.430062, -0.882141);
	candidate_dirs_.emplace_back(0.479544, 0.871083, 0.106072);
	candidate_dirs_.emplace_back(-0.450625, 0.318405, -0.834);
	candidate_dirs_.emplace_back(-0.114836, 0.967969, 0.223269);
	candidate_dirs_.emplace_back(0.811593, 0.431246, 0.394136);
	candidate_dirs_.emplace_back(-0.929067, 0.353576, -0.10871);
	candidate_dirs_.emplace_back(0.931589, 0.345444, -0.113183);
	candidate_dirs_.emplace_back(-0.0565737, 0.499183, -0.864648);
	candidate_dirs_.emplace_back(0.063814, 0.59276, 0.802847);
	candidate_dirs_.emplace_back(0.106241, 0.334506, 0.936386);
	candidate_dirs_.emplace_back(-0.923545, 0.219769, 0.314272);
	candidate_dirs_.emplace_back(0.254412, 0.964894, -0.0652222);
	candidate_dirs_.emplace_back(-0.315927, 0.44789, 0.836412);
	candidate_dirs_.emplace_back(0.228666, 0.828621, -0.510979);
	candidate_dirs_.emplace_back(-0.15809, 0.736638, -0.65755);
	candidate_dirs_.emplace_back(-0.458489, 0.588582, -0.665852);
	candidate_dirs_.emplace_back(-0.0885497, 0.985283, -0.146207);
	candidate_dirs_.emplace_back(-0.621645, 0.782028, -0.0446098);
	candidate_dirs_.emplace_back(-0.215535, 0.663873, 0.716113);
	candidate_dirs_.emplace_back(-0.360951, 0.378192, 0.852458);
	candidate_dirs_.emplace_back(0.669136, 0.711455, 0.214682);
	candidate_dirs_.emplace_back(-0.778806, 0.318962, 0.540116);
	candidate_dirs_.emplace_back(-0.669775, 0.432197, 0.603828);
	candidate_dirs_.emplace_back(0.704493, 0.548329, -0.450582);
	candidate_dirs_.emplace_back(0.438503, 0.282068, 0.853319);
	candidate_dirs_.emplace_back(0.62642, 0.776074, 0.0728544);
	candidate_dirs_.emplace_back(0.226676, 0.508832, 0.830487);
	candidate_dirs_.emplace_back(0.501428, 0.231406, -0.833679);
	candidate_dirs_.emplace_back(0.263647, 0.205479, 0.94248);
	candidate_dirs_.emplace_back(-0.732677, 0.680379, -0.0164164);
	candidate_dirs_.emplace_back(-0.822959, 0.45767, 0.336566);
	candidate_dirs_.emplace_back(-0.867603, 0.496777, -0.0218641);
	candidate_dirs_.emplace_back(0.119803, 0.697307, -0.70669);
	candidate_dirs_.emplace_back(0.509943, 0.701001, 0.498554);
	candidate_dirs_.emplace_back(-0.358267, 0.909477, -0.210941);
	candidate_dirs_.emplace_back(0.393933, 0.917675, -0.0518594);
	candidate_dirs_.emplace_back(0.155253, 0.925795, -0.344673);
	candidate_dirs_.emplace_back(-0.127951, 0.382028, 0.91525);
	candidate_dirs_.emplace_back(0.712585, 0.62869, -0.311404);
	candidate_dirs_.emplace_back(-0.535202, 0.713314, -0.452484);
	candidate_dirs_.emplace_back(0.920744, 0.389195, -0.0275173);
	candidate_dirs_.emplace_back(-0.278373, 0.234527, -0.9314);
	candidate_dirs_.emplace_back(0.665987, 0.401911, -0.628433);
	candidate_dirs_.emplace_back(-0.748393, 0.502115, -0.433346);
	candidate_dirs_.emplace_back(0.593077, 0.750299, -0.29208);
	candidate_dirs_.emplace_back(-0.651021, 0.656064, 0.381773);
	candidate_dirs_.emplace_back(-0.911385, 0.312424, 0.267896);
	candidate_dirs_.emplace_back(-0.305496, 0.424771, -0.852198);
	candidate_dirs_.emplace_back(-0.251166, 0.937466, -0.240985);
	candidate_dirs_.emplace_back(0.166685, 0.789785, -0.590301);
	candidate_dirs_.emplace_back(-0.145928, 0.75961, 0.633796);
	candidate_dirs_.emplace_back(0.550798, 0.599054, 0.581167);
	candidate_dirs_.emplace_back(-0.263881, 0.378224, -0.887307);
	candidate_dirs_.emplace_back(-0.337759, 0.936515, -0.0941219);
	candidate_dirs_.emplace_back(0.354722, 0.771291, -0.528473);
	candidate_dirs_.emplace_back(0.0769868, 0.777295, -0.624408);
	candidate_dirs_.emplace_back(0.980409, 0.188039, 0.0586458);
	candidate_dirs_.emplace_back(-0.490549, 0.719477, 0.491645);
	candidate_dirs_.emplace_back(-0.149259, 0.988139, -0.0360891);
	candidate_dirs_.emplace_back(-0.552666, 0.702715, 0.448053);
	candidate_dirs_.emplace_back(-0.375277, 0.914612, 0.150506);
	candidate_dirs_.emplace_back(-0.367361, 0.880427, 0.299822);
	candidate_dirs_.emplace_back(0.150833, 0.945555, 0.288403);
	candidate_dirs_.emplace_back(-0.253625, 0.857662, -0.447314);
	candidate_dirs_.emplace_back(-0.905216, 0.178305, -0.385734);
	candidate_dirs_.emplace_back(-0.861178, 0.31189, 0.401369);
	candidate_dirs_.emplace_back(-0.718402, 0.400234, -0.568957);
	candidate_dirs_.emplace_back(-0.652365, 0.593778, 0.471007);
	candidate_dirs_.emplace_back(0.00369851, 0.787625, 0.616143);
	candidate_dirs_.emplace_back(0.406053, 0.883036, 0.235307);
	candidate_dirs_.emplace_back(0.871281, 0.264069, -0.413686);
	candidate_dirs_.emplace_back(0.409251, 0.448475, 0.794597);
	candidate_dirs_.emplace_back(-0.781594, 0.621215, -0.0565901);
	candidate_dirs_.emplace_back(-0.307503, 0.71898, 0.623306);
	candidate_dirs_.emplace_back(-0.833241, 0.50623, 0.222353);
	candidate_dirs_.emplace_back(0.118686, 0.978346, -0.169569);
	candidate_dirs_.emplace_back(-0.745093, 0.662674, 0.0754969);
	candidate_dirs_.emplace_back(0.524308, 0.779812, -0.342044);
	candidate_dirs_.emplace_back(-0.558388, 0.320237, -0.765278);
	candidate_dirs_.emplace_back(-0.0617115, 0.817091, -0.573197);
	candidate_dirs_.emplace_back(0.52845, 0.473899, -0.704387);
	candidate_dirs_.emplace_back(0.369653, 0.920646, 0.125572);
	candidate_dirs_.emplace_back(0.823007, 0.197698, 0.532518);
	candidate_dirs_.emplace_back(0.370706, 0.822538, 0.431286);
	candidate_dirs_.emplace_back(0.230289, 0.9557, 0.183314);
	candidate_dirs_.emplace_back(-0.945672, 0.324379, -0.0219883);
	candidate_dirs_.emplace_back(-0.0299754, 0.972384, -0.231453);
	candidate_dirs_.emplace_back(-0.246007, 0.895693, -0.370425);
	candidate_dirs_.emplace_back(0.767798, 0.367196, -0.525027);
	candidate_dirs_.emplace_back(-0.835856, 0.376756, -0.399248);
	candidate_dirs_.emplace_back(0.32532, 0.892361, -0.312823);
	candidate_dirs_.emplace_back(0.651135, 0.403405, 0.642875);
	candidate_dirs_.emplace_back(-0.318122, 0.597324, 0.736208);
	candidate_dirs_.emplace_back(0.374329, 0.580484, 0.72313);
	candidate_dirs_.emplace_back(-0.0631927, 0.930401, 0.361055);
	candidate_dirs_.emplace_back(0.541474, 0.626699, -0.560406);
	candidate_dirs_.emplace_back(-0.295799, 0.291884, 0.909564);
	candidate_dirs_.emplace_back(0.886944, 0.449396, -0.106643);
	candidate_dirs_.emplace_back(0.0848487, 0.995098, -0.050806);
	candidate_dirs_.emplace_back(-0.0864748, 0.551391, 0.829753);
	candidate_dirs_.emplace_back(-0.517947, 0.536056, 0.666615);
	candidate_dirs_.emplace_back(0.219424, 0.921725, 0.319808);
	candidate_dirs_.emplace_back(0.720724, 0.277265, 0.635359);
	candidate_dirs_.emplace_back(0.338163, 0.902277, 0.267472);
	candidate_dirs_.emplace_back(0.0824518, 0.475132, -0.876043);
	candidate_dirs_.emplace_back(-0.212886, 0.574215, 0.790542);
	candidate_dirs_.emplace_back(-0.230201, 0.5187, -0.823382);
	candidate_dirs_.emplace_back(0.154559, 0.69712, 0.700097);
	candidate_dirs_.emplace_back(-0.244099, 0.723081, -0.646196);
	candidate_dirs_.emplace_back(-0.714322, 0.27602, 0.643084);
	candidate_dirs_.emplace_back(0.802185, 0.445182, -0.397885);
	candidate_dirs_.emplace_back(-0.640683, 0.765398, 0.0607496);
	candidate_dirs_.emplace_back(0.458584, 0.39766, 0.794712);
	candidate_dirs_.emplace_back(0.743533, 0.6472, 0.168196);
	candidate_dirs_.emplace_back(0.776926, 0.300364, 0.553324);
	candidate_dirs_.emplace_back(0.919385, 0.355138, 0.169141);
	candidate_dirs_.emplace_back(0.229146, 0.913204, -0.336974);
	candidate_dirs_.emplace_back(0.549241, 0.829625, -0.100289);
	candidate_dirs_.emplace_back(0.683243, 0.709399, -0.17301);
	candidate_dirs_.emplace_back(-0.420561, 0.833324, -0.358747);
	candidate_dirs_.emplace_back(-0.124994, 0.893186, -0.431966);
	candidate_dirs_.emplace_back(-0.511003, 0.847899, 0.141222);
	candidate_dirs_.emplace_back(-0.0409951, 0.456226, 0.888919);
	candidate_dirs_.emplace_back(0.33483, 0.641765, -0.689947);
	candidate_dirs_.emplace_back(-0.448892, 0.610941, 0.65211);
	candidate_dirs_.emplace_back(-0.0475794, 0.275958, 0.959991);
	candidate_dirs_.emplace_back(0.2682, 0.408858, -0.872298);
	candidate_dirs_.emplace_back(-0.189875, 0.43597, 0.879703);
	candidate_dirs_.emplace_back(-0.39775, 0.91486, 0.0694724);
	candidate_dirs_.emplace_back(-0.560889, 0.42101, -0.71285);
	candidate_dirs_.emplace_back(0.759025, 0.458986, 0.461749);
	candidate_dirs_.emplace_back(-0.205995, 0.838448, -0.50455);
	candidate_dirs_.emplace_back(-0.54432, 0.385285, 0.745165);
	candidate_dirs_.emplace_back(0.859312, 0.310056, 0.406752);
	candidate_dirs_.emplace_back(-0.757674, 0.255292, -0.60063);
	candidate_dirs_.emplace_back(-0.954255, 0.245177, 0.171128);
	candidate_dirs_.emplace_back(-0.960213, 0.194387, -0.200511);
	candidate_dirs_.emplace_back(0.407163, 0.912899, 0.0288764);
	candidate_dirs_.emplace_back(0.729513, 0.605893, 0.31734);
	candidate_dirs_.emplace_back(-0.760393, 0.39916, 0.512322);
	candidate_dirs_.emplace_back(-0.337705, 0.645508, 0.685036);
	candidate_dirs_.emplace_back(-0.619668, 0.282797, 0.732145);
	candidate_dirs_.emplace_back(0.914512, 0.238393, -0.326859);
	candidate_dirs_.emplace_back(-0.0592721, 0.338388, -0.939138);
	candidate_dirs_.emplace_back(-0.0811325, 0.717522, -0.691794);
	candidate_dirs_.emplace_back(-0.379976, 0.717295, 0.584043);
	candidate_dirs_.emplace_back(-0.705921, 0.689291, 0.162953);
	candidate_dirs_.emplace_back(0.802376, 0.535729, -0.263032);
	candidate_dirs_.emplace_back(0.29489, 0.949805, 0.104456);
	candidate_dirs_.emplace_back(-0.277267, 0.673061, -0.685647);
	candidate_dirs_.emplace_back(0.117838, 0.640347, -0.758993);
	candidate_dirs_.emplace_back(0.25328, 0.868965, 0.425145);
	candidate_dirs_.emplace_back(0.563694, 0.697728, -0.442069);
	candidate_dirs_.emplace_back(-0.488394, 0.833079, 0.259714);
	candidate_dirs_.emplace_back(0.801179, 0.348557, 0.486437);
	candidate_dirs_.emplace_back(0.27943, 0.668894, 0.68884);
	candidate_dirs_.emplace_back(0.464451, 0.475363, -0.747205);
	candidate_dirs_.emplace_back(-0.491139, 0.780192, -0.387406);
	candidate_dirs_.emplace_back(0.945868, 0.237258, -0.221454);
	candidate_dirs_.emplace_back(-0.592826, 0.719436, 0.361896);
	candidate_dirs_.emplace_back(-0.797908, 0.568801, 0.199517);
	candidate_dirs_.emplace_back(0.518315, 0.829318, -0.208762);
	candidate_dirs_.emplace_back(0.259706, 0.620484, -0.739968);
	candidate_dirs_.emplace_back(-0.207456, 0.440904, -0.87325);
	candidate_dirs_.emplace_back(-0.0345635, 0.89962, 0.435303);
	candidate_dirs_.emplace_back(0.456354, 0.832617, 0.31383);
	candidate_dirs_.emplace_back(-0.269317, 0.195857, 0.942925);
	candidate_dirs_.emplace_back(-0.568317, 0.237021, -0.787932);
	candidate_dirs_.emplace_back(0.253215, 0.946146, -0.201718);
	candidate_dirs_.emplace_back(0.132507, 0.396366, 0.90848);
	candidate_dirs_.emplace_back(0.897347, 0.341762, 0.279227);
	candidate_dirs_.emplace_back(-0.598169, 0.707994, -0.375418);
	candidate_dirs_.emplace_back(0.114363, 0.637309, 0.762075);
	candidate_dirs_.emplace_back(-0.0207043, 0.767492, -0.640725);
	candidate_dirs_.emplace_back(-0.333609, 0.898709, -0.284652);
	candidate_dirs_.emplace_back(-0.897595, 0.346107, -0.273006);
	candidate_dirs_.emplace_back(-0.615744, 0.307125, -0.725626);
	candidate_dirs_.emplace_back(0.529408, 0.390823, -0.752984);
	candidate_dirs_.emplace_back(0.493678, 0.757397, 0.427356);
	candidate_dirs_.emplace_back(-0.109823, 0.82335, 0.556806);
	candidate_dirs_.emplace_back(-0.176513, 0.173878, -0.968819);
	candidate_dirs_.emplace_back(0.329189, 0.20457, -0.921838);
	candidate_dirs_.emplace_back(0.621342, 0.579827, -0.527006);
	candidate_dirs_.emplace_back(0.131853, 0.991261, 0.00393112);
	candidate_dirs_.emplace_back(-0.358436, 0.489755, -0.794773);
	candidate_dirs_.emplace_back(0.0709809, 0.856038, 0.512017);
	candidate_dirs_.emplace_back(0.741594, 0.666735, -0.0741784);
	candidate_dirs_.emplace_back(-0.402267, 0.909502, -0.10482);
	candidate_dirs_.emplace_back(-0.599167, 0.640571, 0.480278);
	candidate_dirs_.emplace_back(-0.628568, 0.766477, 0.13197);
	candidate_dirs_.emplace_back(-0.675544, 0.639922, -0.366252);
	candidate_dirs_.emplace_back(-0.601058, 0.583429, -0.546205);
	candidate_dirs_.emplace_back(-0.463335, 0.191119, -0.865329);
	candidate_dirs_.emplace_back(0.898398, 0.423968, 0.114597);
	candidate_dirs_.emplace_back(0.496586, 0.867018, -0.041015);
	candidate_dirs_.emplace_back(0.159681, 0.906383, 0.391116);
	candidate_dirs_.emplace_back(0.818645, 0.52454, 0.233834);
	candidate_dirs_.emplace_back(0.126826, 0.88236, 0.453163);
	candidate_dirs_.emplace_back(0.0502082, 0.71893, 0.693267);
	candidate_dirs_.emplace_back(-0.455974, 0.784748, 0.419832);
	candidate_dirs_.emplace_back(-0.7814, 0.364475, -0.50653);
	candidate_dirs_.emplace_back(-0.518406, 0.854707, -0.0270625);
	candidate_dirs_.emplace_back(-0.404154, 0.874457, -0.268299);
	candidate_dirs_.emplace_back(0.508841, 0.57232, -0.643064);
	candidate_dirs_.emplace_back(0.789456, 0.49539, 0.362421);
	candidate_dirs_.emplace_back(0.442333, 0.544974, -0.712281);
	candidate_dirs_.emplace_back(-0.771141, 0.569243, 0.285139);
	candidate_dirs_.emplace_back(-0.18974, 0.882408, 0.430528);
	candidate_dirs_.emplace_back(0.829026, 0.199759, -0.522314);
	candidate_dirs_.emplace_back(-0.0123755, 0.846685, 0.531951);
	candidate_dirs_.emplace_back(-0.776217, 0.516921, -0.360943);
	candidate_dirs_.emplace_back(-0.223436, 0.973552, -0.047675);
	candidate_dirs_.emplace_back(0.428984, 0.89013, 0.153759);
	candidate_dirs_.emplace_back(-0.402065, 0.784088, 0.47281);
	candidate_dirs_.emplace_back(-0.389964, 0.539688, 0.7461);
	candidate_dirs_.emplace_back(-0.640981, 0.749457, -0.1657);
	candidate_dirs_.emplace_back(0.138111, 0.223923, 0.964771);
	candidate_dirs_.emplace_back(-0.416131, 0.793247, -0.444516);
	candidate_dirs_.emplace_back(-0.039895, 0.685846, 0.726652);
	candidate_dirs_.emplace_back(-0.0501629, 0.182837, 0.981863);
	candidate_dirs_.emplace_back(-0.844205, 0.522095, 0.121387);
	candidate_dirs_.emplace_back(0.798417, 0.600214, -0.0476849);
	candidate_dirs_.emplace_back(0.243073, 0.708123, -0.66293);
	candidate_dirs_.emplace_back(-0.215809, 0.970509, 0.107418);
	candidate_dirs_.emplace_back(-0.857826, 0.198231, -0.474172);
	candidate_dirs_.emplace_back(0.0670849, 0.522661, 0.849897);
	candidate_dirs_.emplace_back(-0.441194, 0.184802, 0.878178);
	candidate_dirs_.emplace_back(-0.184309, 0.613393, -0.767971);
	candidate_dirs_.emplace_back(0.213681, 0.656525, 0.723405);
	candidate_dirs_.emplace_back(-0.851657, 0.181427, 0.491695);
	candidate_dirs_.emplace_back(0.851487, 0.517291, 0.0859061);
	candidate_dirs_.emplace_back(0.0715828, 0.200375, 0.977101);
	candidate_dirs_.emplace_back(0.626434, 0.479823, 0.614289);
	candidate_dirs_.emplace_back(0.256362, 0.28213, 0.92449);
	candidate_dirs_.emplace_back(-0.588416, 0.187117, 0.786609);
	candidate_dirs_.emplace_back(0.874403, 0.193302, 0.445032);
	candidate_dirs_.emplace_back(0.0307388, 0.926899, -0.374049);
	candidate_dirs_.emplace_back(-0.655516, 0.496628, 0.56891);
	candidate_dirs_.emplace_back(0.34717, 0.513298, 0.784855);
	candidate_dirs_.emplace_back(0.512818, 0.270775, 0.814677);
	candidate_dirs_.emplace_back(0.854804, 0.413739, 0.313257);
	candidate_dirs_.emplace_back(-0.688377, 0.654255, 0.31319);
	candidate_dirs_.emplace_back(-0.0054649, 0.42716, -0.90416);
	candidate_dirs_.emplace_back(-0.510386, 0.280114, 0.813045);
	candidate_dirs_.emplace_back(0.107992, 0.774263, 0.623582);
	candidate_dirs_.emplace_back(0.502336, 0.443081, 0.742521);
	candidate_dirs_.emplace_back(-0.475365, 0.841294, -0.257396);
	candidate_dirs_.emplace_back(0.306226, 0.814989, 0.491954);
	candidate_dirs_.emplace_back(-0.898325, 0.430341, 0.0884187);
	candidate_dirs_.emplace_back(0.348314, 0.751438, 0.560373);
	candidate_dirs_.emplace_back(0.417537, 0.636819, 0.648171);
	candidate_dirs_.emplace_back(-0.26384, 0.357032, 0.896056);
	candidate_dirs_.emplace_back(-0.954747, 0.259362, -0.145568);
	candidate_dirs_.emplace_back(-0.65118, 0.203052, 0.731255);
	candidate_dirs_.emplace_back(-0.483945, 0.628195, -0.609235);
	candidate_dirs_.emplace_back(-0.650779, 0.577221, -0.493257);
	candidate_dirs_.emplace_back(0.539627, 0.838368, 0.0770882);
	candidate_dirs_.emplace_back(0.258843, 0.780602, 0.568912);
	candidate_dirs_.emplace_back(0.619717, 0.705513, 0.343807);
	candidate_dirs_.emplace_back(0.483317, 0.589923, 0.646835);
	candidate_dirs_.emplace_back(-0.162176, 0.918075, 0.361713);
	candidate_dirs_.emplace_back(-0.765881, 0.530389, 0.363473);
	candidate_dirs_.emplace_back(0.0481449, 0.304744, -0.951217);
	candidate_dirs_.emplace_back(-0.929184, 0.204259, -0.308052);
	candidate_dirs_.emplace_back(-0.0472202, 0.927037, -0.371985);
	candidate_dirs_.emplace_back(-0.754923, 0.63924, 0.146508);
	candidate_dirs_.emplace_back(-0.284697, 0.911795, 0.295936);
	candidate_dirs_.emplace_back(0.126668, 0.869175, -0.478007);
	candidate_dirs_.emplace_back(0.838399, 0.545011, -0.00714464);
	candidate_dirs_.emplace_back(-0.0256989, 0.957268, 0.288058);
	candidate_dirs_.emplace_back(-0.659012, 0.720025, 0.21741);
	candidate_dirs_.emplace_back(-0.539173, 0.788393, -0.29619);
	candidate_dirs_.emplace_back(-0.930955, 0.306289, -0.198769);
	candidate_dirs_.emplace_back(0.874481, 0.396571, -0.279312);
	candidate_dirs_.emplace_back(0.269483, 0.550055, 0.790455);
	candidate_dirs_.emplace_back(-0.911187, 0.411603, -0.0179428);
	candidate_dirs_.emplace_back(-0.119741, 0.878795, 0.461932);
	candidate_dirs_.emplace_back(0.847282, 0.523875, -0.0875668);
	candidate_dirs_.emplace_back(-0.260819, 0.964971, 0.0283723);
	candidate_dirs_.emplace_back(0.97352, 0.187057, -0.131409);
	candidate_dirs_.emplace_back(0.699359, 0.713525, 0.0421782);
	candidate_dirs_.emplace_back(0.884564, 0.419006, 0.204893);
	candidate_dirs_.emplace_back(0.0283921, 0.589643, -0.807165);
	candidate_dirs_.emplace_back(0.114667, 0.833464, -0.540546);
	candidate_dirs_.emplace_back(0.281691, 0.753923, -0.593507);
	candidate_dirs_.emplace_back(-0.0933029, 0.267922, -0.958912);
	candidate_dirs_.emplace_back(0.98223, 0.182363, -0.0443629);
	candidate_dirs_.emplace_back(-0.1885, 0.221997, 0.956653);
	candidate_dirs_.emplace_back(0.470864, 0.881829, 0.0257599);
	candidate_dirs_.emplace_back(-0.539981, 0.638763, -0.548089);
	candidate_dirs_.emplace_back(-0.0234254, 0.368454, 0.929351);
	candidate_dirs_.emplace_back(-0.273747, 0.950955, 0.144036);
	candidate_dirs_.emplace_back(0.21207, 0.967928, -0.134693);
	candidate_dirs_.emplace_back(-0.612942, 0.735252, 0.289322);
	candidate_dirs_.emplace_back(0.688406, 0.445372, -0.572487);
	candidate_dirs_.emplace_back(0.607009, 0.794695, -0.000490128);
	candidate_dirs_.emplace_back(-0.156236, 0.622649, 0.766745);
	candidate_dirs_.emplace_back(-0.371223, 0.648593, -0.66447);
	candidate_dirs_.emplace_back(0.566844, 0.499772, 0.654917);
	candidate_dirs_.emplace_back(0.633012, 0.319393, -0.705184);
	candidate_dirs_.emplace_back(0.734365, 0.439488, -0.51726);
	candidate_dirs_.emplace_back(-0.672244, 0.282894, -0.684148);
	candidate_dirs_.emplace_back(-0.321754, 0.863569, 0.38823);
	candidate_dirs_.emplace_back(-0.79199, 0.603779, 0.0905714);
	candidate_dirs_.emplace_back(0.664585, 0.622889, -0.412719);
	candidate_dirs_.emplace_back(-0.0597385, 0.607123, 0.792359);
	candidate_dirs_.emplace_back(-0.646153, 0.221421, -0.730383);
	candidate_dirs_.emplace_back(0.907711, 0.353893, -0.225433);
	candidate_dirs_.emplace_back(-0.142143, 0.783005, -0.605557);
	candidate_dirs_.emplace_back(0.77382, 0.255993, -0.57937);
	candidate_dirs_.emplace_back(-0.811849, 0.543361, -0.213681);
	candidate_dirs_.emplace_back(-0.877701, 0.396907, 0.268524);
	candidate_dirs_.emplace_back(0.634278, 0.754824, 0.16713);
	candidate_dirs_.emplace_back(0.601216, 0.544933, 0.584455);
	candidate_dirs_.emplace_back(0.576064, 0.305243, -0.758273);
	candidate_dirs_.emplace_back(0.329179, 0.321179, 0.887967);
	candidate_dirs_.emplace_back(0.903874, 0.185281, -0.385594);
	candidate_dirs_.emplace_back(0.204356, 0.356201, 0.911789);
	candidate_dirs_.emplace_back(0.697743, 0.181667, 0.69293);
	candidate_dirs_.emplace_back(0.406742, 0.213018, -0.88836);
	candidate_dirs_.emplace_back(-0.718738, 0.593878, 0.36156);
	candidate_dirs_.emplace_back(-0.558497, 0.587396, 0.585702);
	candidate_dirs_.emplace_back(-0.723971, 0.205998, 0.658354);
	candidate_dirs_.emplace_back(0.873268, 0.487019, 0.0146987);
	candidate_dirs_.emplace_back(-0.724648, 0.647486, 0.235897);
	candidate_dirs_.emplace_back(0.48483, 0.204472, 0.850371);
	candidate_dirs_.emplace_back(-0.976949, 0.206187, -0.0552888);
	candidate_dirs_.emplace_back(0.85346, 0.490561, 0.175946);
	candidate_dirs_.emplace_back(0.25042, 0.189941, -0.949322);
	candidate_dirs_.emplace_back(-0.283243, 0.549826, -0.785789);
	candidate_dirs_.emplace_back(-0.361987, 0.345529, -0.86578);
	candidate_dirs_.emplace_back(-0.490217, 0.376792, -0.785948);
	candidate_dirs_.emplace_back(-0.901137, 0.27745, -0.333127);
	candidate_dirs_.emplace_back(-0.449068, 0.26447, 0.85346);
	candidate_dirs_.emplace_back(-0.066265, 0.736202, 0.67351);
	candidate_dirs_.emplace_back(0.120052, 0.464141, 0.877588);
	candidate_dirs_.emplace_back(-0.47651, 0.806853, 0.34918);
	candidate_dirs_.emplace_back(-0.72899, 0.335057, 0.596917);
	candidate_dirs_.emplace_back(0.958531, 0.220515, 0.180532);
	candidate_dirs_.emplace_back(0.285132, 0.447297, 0.847717);
	candidate_dirs_.emplace_back(0.177087, 0.223472, -0.958489);
	candidate_dirs_.emplace_back(0.190999, 0.428115, 0.88331);
	candidate_dirs_.emplace_back(-0.767461, 0.597705, -0.231846);
	candidate_dirs_.emplace_back(-0.464696, 0.489185, 0.738076);
	candidate_dirs_.emplace_back(-0.936881, 0.314903, 0.151951);
	candidate_dirs_.emplace_back(0.568309, 0.691464, 0.445985);
	candidate_dirs_.emplace_back(0.834057, 0.527111, -0.162798);
	candidate_dirs_.emplace_back(0.168123, 0.587577, -0.79151);
	candidate_dirs_.emplace_back(0.201795, 0.979355, -0.0119737);
	candidate_dirs_.emplace_back(-0.781953, 0.433803, -0.44762);
	candidate_dirs_.emplace_back(0.925268, 0.203299, 0.320232);
	candidate_dirs_.emplace_back(-0.861789, 0.382541, -0.33314);
	candidate_dirs_.emplace_back(0.498024, 0.512527, 0.699491);
	candidate_dirs_.emplace_back(0.611697, 0.766808, -0.194506);
	candidate_dirs_.emplace_back(-0.051944, 0.857256, -0.512263);
	candidate_dirs_.emplace_back(-0.224084, 0.948981, 0.221861);
	candidate_dirs_.emplace_back(-0.680905, 0.731102, -0.0430952);
	candidate_dirs_.emplace_back(0.832258, 0.451469, -0.321749);
	candidate_dirs_.emplace_back(0.779316, 0.176889, -0.601147);
	candidate_dirs_.emplace_back(0.00348143, 0.996205, 0.0869651);
	candidate_dirs_.emplace_back(-0.644384, 0.481177, -0.594338);
	candidate_dirs_.emplace_back(0.586566, 0.756142, 0.290155);
	candidate_dirs_.emplace_back(-0.581602, 0.791266, 0.188778);
	candidate_dirs_.emplace_back(-0.125584, 0.440203, -0.889072);
	candidate_dirs_.emplace_back(-0.431987, 0.879806, 0.198313);
	candidate_dirs_.emplace_back(-0.383156, 0.446162, 0.808784);
	candidate_dirs_.emplace_back(-0.117877, 0.306167, 0.944652);
	candidate_dirs_.emplace_back(-0.849653, 0.248654, 0.465038);
	candidate_dirs_.emplace_back(-0.814243, 0.368541, 0.448538);
	candidate_dirs_.emplace_back(-0.152008, 0.672741, -0.724095);
	candidate_dirs_.emplace_back(0.444856, 0.715198, 0.539068);
	candidate_dirs_.emplace_back(-0.743005, 0.333052, -0.580534);
	candidate_dirs_.emplace_back(0.350418, 0.388152, -0.852376);
	candidate_dirs_.emplace_back(0.617401, 0.235733, -0.750497);
	candidate_dirs_.emplace_back(-0.401261, 0.741156, -0.538217);
	candidate_dirs_.emplace_back(-0.822711, 0.439275, -0.360811);
	candidate_dirs_.emplace_back(-0.621326, 0.746647, -0.237639);
	candidate_dirs_.emplace_back(0.857985, 0.457744, -0.233091);
	candidate_dirs_.emplace_back(0.0586101, 0.416221, 0.907372);
	candidate_dirs_.emplace_back(-0.0806445, 0.594103, -0.800336);
	candidate_dirs_.emplace_back(0.501012, 0.306452, -0.809366);
	candidate_dirs_.emplace_back(-0.214933, 0.505008, 0.835925);
	candidate_dirs_.emplace_back(0.347412, 0.302742, -0.887498);
	candidate_dirs_.emplace_back(-0.87469, 0.448644, 0.183402);
	candidate_dirs_.emplace_back(-0.793222, 0.291216, -0.534783);
	candidate_dirs_.emplace_back(0.813843, 0.367877, -0.449806);
	candidate_dirs_.emplace_back(0.317517, 0.931246, 0.178786);
	candidate_dirs_.emplace_back(0.67355, 0.527832, -0.51742);
	candidate_dirs_.emplace_back(-0.695652, 0.709957, -0.109678);
	candidate_dirs_.emplace_back(0.905952, 0.421744, 0.0371793);
	candidate_dirs_.emplace_back(0.54894, 0.191593, 0.813607);
	candidate_dirs_.emplace_back(-0.778944, 0.450406, 0.436326);
	candidate_dirs_.emplace_back(-0.95109, 0.176007, 0.253868);
	candidate_dirs_.emplace_back(0.671311, 0.248232, -0.698371);
	candidate_dirs_.emplace_back(-0.853554, 0.446414, -0.268627);
	candidate_dirs_.emplace_back(-0.564437, 0.795342, -0.221005);
	candidate_dirs_.emplace_back(-0.102938, 0.950087, 0.294513);
	candidate_dirs_.emplace_back(-0.476249, 0.876875, 0.0654052);
	candidate_dirs_.emplace_back(0.490712, 0.659694, 0.569215);
	candidate_dirs_.emplace_back(-0.349329, 0.936714, -0.0231557);
	candidate_dirs_.emplace_back(-0.694735, 0.716786, 0.059669);
	candidate_dirs_.emplace_back(0.0488097, 0.736178, -0.675026);
	candidate_dirs_.emplace_back(0.282707, 0.949692, -0.134765);
	candidate_dirs_.emplace_back(-0.624902, 0.425774, -0.654381);
	candidate_dirs_.emplace_back(-0.36997, 0.192611, 0.908858);
	candidate_dirs_.emplace_back(-0.895105, 0.206312, 0.39525);
	candidate_dirs_.emplace_back(0.204096, 0.869395, -0.449996);
	candidate_dirs_.emplace_back(-0.973018, 0.203889, 0.108009);
	candidate_dirs_.emplace_back(-0.123932, 0.842796, -0.52377);
	candidate_dirs_.emplace_back(0.483258, 0.828007, -0.284371);
	candidate_dirs_.emplace_back(0.836585, 0.282912, 0.469133);
	candidate_dirs_.emplace_back(0.352969, 0.64668, 0.676179);
	candidate_dirs_.emplace_back(0.435136, 0.406075, -0.803592);
	candidate_dirs_.emplace_back(0.945591, 0.324165, 0.0278404);
	candidate_dirs_.emplace_back(-0.505357, 0.186685, 0.842475);
	candidate_dirs_.emplace_back(-0.454903, 0.743125, -0.490743);
	candidate_dirs_.emplace_back(0.910225, 0.303406, -0.281843);
	candidate_dirs_.emplace_back(-0.52854, 0.75502, 0.38806);
	candidate_dirs_.emplace_back(-0.305562, 0.519622, 0.797888);
	candidate_dirs_.emplace_back(0.153464, 0.520155, 0.840171);
	candidate_dirs_.emplace_back(-0.515043, 0.836668, -0.186325);
	candidate_dirs_.emplace_back(0.0428067, 0.300418, 0.952846);
	candidate_dirs_.emplace_back(-0.535054, 0.57431, -0.619585);
	candidate_dirs_.emplace_back(-0.121755, 0.699582, 0.704103);
	candidate_dirs_.emplace_back(0.27492, 0.37443, 0.885563);
	candidate_dirs_.emplace_back(-0.441829, 0.713182, 0.544204);
	candidate_dirs_.emplace_back(-0.817643, 0.175212, -0.548417);
	candidate_dirs_.emplace_back(-0.303143, 0.301632, -0.903948);
	candidate_dirs_.emplace_back(0.610333, 0.786765, -0.092162);
	candidate_dirs_.emplace_back(0.740603, 0.377631, 0.555789);
	candidate_dirs_.emplace_back(-0.693471, 0.518494, 0.500262);
	candidate_dirs_.emplace_back(0.655508, 0.177332, -0.734073);
	candidate_dirs_.emplace_back(0.452441, 0.813161, -0.36615);
	candidate_dirs_.emplace_back(0.831328, 0.265422, -0.488308);
	candidate_dirs_.emplace_back(-0.746136, 0.179201, -0.641224);
	candidate_dirs_.emplace_back(-0.50686, 0.250979, -0.824683);
	candidate_dirs_.emplace_back(0.656444, 0.318531, 0.683827);
	candidate_dirs_.emplace_back(-0.102111, 0.967173, -0.232701);
	candidate_dirs_.emplace_back(0.398647, 0.230746, 0.887602);
	candidate_dirs_.emplace_back(-0.608994, 0.178138, -0.772912);
	candidate_dirs_.emplace_back(0.675484, 0.249716, 0.693804);
	candidate_dirs_.emplace_back(-0.25492, 0.893659, 0.369309);
	candidate_dirs_.emplace_back(0.592232, 0.429092, 0.682013);
	candidate_dirs_.emplace_back(0.774775, 0.572384, 0.268513);
	candidate_dirs_.emplace_back(-0.462599, 0.358445, 0.810875);
	candidate_dirs_.emplace_back(0.0546584, 0.816914, 0.574164);
	candidate_dirs_.emplace_back(0.262239, 0.483576, -0.835096);
	candidate_dirs_.emplace_back(-0.196412, 0.71703, 0.668798);
	candidate_dirs_.emplace_back(-0.55007, 0.639115, 0.537546);
	candidate_dirs_.emplace_back(0.662049, 0.69238, 0.286881);
	candidate_dirs_.emplace_back(0.703401, 0.701101, 0.116982);
	candidate_dirs_.emplace_back(0.955059, 0.272995, -0.115482);
	candidate_dirs_.emplace_back(-0.602833, 0.505054, 0.617667);
	candidate_dirs_.emplace_back(0.472041, 0.65729, -0.587492);
}